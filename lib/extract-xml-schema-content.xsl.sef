<?xml version="1.0" encoding="utf-8"?>
<package xmlns="http://ns.saxonica.com/xslt/export" xmlns:fn="http://www.w3.org/2005/xpath-functions" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:vv="http://saxon.sf.net/generated-variable" xmlns:java-type="http://saxon.sf.net/java-type" version="30" packageVersion="1" saxonVersion="9.7.0.18" timeStamp="2018-04-10T17:16:07.835-07:00">
 <co id="0" binds="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0">
  <mode onNo="TC" flags="dW" patternSlots="0">
   <templateRule prec="0" prio="0.5" seq="16" rank="2" minImp="0" slots="0" flags="os" line="195" module="file:/run/media/g/g-dev-tsoa.img.disk/g-dev-tsoa/xml-schema-content-extractor/./lib/extract-xml-schema-content.xsl">
    <p.withUpper role="match" axis="parent" upFirst="false">
     <p.nodeTest test="*:attribute"/>
     <p.nodeTest test="*:element"/>
    </p.withUpper>
    <sequence role="action" vn="31" baseUri="file:/run/media/g/g-dev-tsoa.img.disk/g-dev-tsoa/xml-schema-content-extractor/./lib/extract-xml-schema-content.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform fn=http://www.w3.org/2005/xpath-functions oxd=http://www.oxygenxml.com/ns/doc/xsl xs=http://www.w3.org/2001/XMLSchema" line="196">
     <choose>
      <fn name="exists">
       <slash simple="1">
        <dot type="element()"/>
        <axis name="preceding-sibling" nodeTest="element()"/>
       </slash>
      </fn>
      <valueOf>
       <str val=", "/>
      </valueOf>
     </choose>
     <valueOf>
      <str val=", &#34;attributes&#34;: { "/>
     </valueOf>
     <valueOf flags="S">
      <str val="&#34;"/>
     </valueOf>
     <valueOf line="199">
      <convert from="xs:untypedAtomic" to="xs:string">
       <data>
        <axis name="attribute" nodeTest="attribute(Q{}name)"/>
       </data>
      </convert>
     </valueOf>
     <valueOf>
      <str val="&#34;: "/>
     </valueOf>
     <choose line="201">
      <fn name="exists">
       <slash>
        <axis name="child" nodeTest="*:annotation"/>
        <axis name="child" nodeTest="*:documentation"/>
       </slash>
      </fn>
      <sequence line="203">
       <valueOf>
        <str val="{ "/>
       </valueOf>
       <applyT bSlot="0">
        <slash role="select">
         <axis name="child" nodeTest="*:annotation"/>
         <axis name="child" nodeTest="*:documentation"/>
        </slash>
       </applyT>
       <valueOf>
        <str val="}, "/>
       </valueOf>
      </sequence>
     </choose>
     <valueOf>
      <str val="{ &#34;facets&#34;: [ "/>
     </valueOf>
     <applyT line="208" bSlot="1">
      <axis role="select" name="child" nodeTest="*:simpleType"/>
     </applyT>
     <valueOf>
      <str val=" ] "/>
     </valueOf>
     <valueOf>
      <str val="} "/>
     </valueOf>
     <valueOf>
      <str val="} "/>
     </valueOf>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="16" rank="2" minImp="0" slots="0" flags="os" line="195" module="file:/run/media/g/g-dev-tsoa.img.disk/g-dev-tsoa/xml-schema-content-extractor/./lib/extract-xml-schema-content.xsl">
    <p.withUpper role="match" axis="parent" upFirst="false">
     <p.nodeTest test="*:attribute"/>
     <p.nodeTest test="*:complexType"/>
    </p.withUpper>
    <sequence role="action" vn="31" baseUri="file:/run/media/g/g-dev-tsoa.img.disk/g-dev-tsoa/xml-schema-content-extractor/./lib/extract-xml-schema-content.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform fn=http://www.w3.org/2005/xpath-functions oxd=http://www.oxygenxml.com/ns/doc/xsl xs=http://www.w3.org/2001/XMLSchema" line="196">
     <choose>
      <fn name="exists">
       <slash simple="1">
        <dot type="element()"/>
        <axis name="preceding-sibling" nodeTest="element()"/>
       </slash>
      </fn>
      <valueOf>
       <str val=", "/>
      </valueOf>
     </choose>
     <valueOf>
      <str val=", &#34;attributes&#34;: { "/>
     </valueOf>
     <valueOf flags="S">
      <str val="&#34;"/>
     </valueOf>
     <valueOf line="199">
      <convert from="xs:untypedAtomic" to="xs:string">
       <data>
        <axis name="attribute" nodeTest="attribute(Q{}name)"/>
       </data>
      </convert>
     </valueOf>
     <valueOf>
      <str val="&#34;: "/>
     </valueOf>
     <choose line="201">
      <fn name="exists">
       <slash>
        <axis name="child" nodeTest="*:annotation"/>
        <axis name="child" nodeTest="*:documentation"/>
       </slash>
      </fn>
      <sequence line="203">
       <valueOf>
        <str val="{ "/>
       </valueOf>
       <applyT bSlot="0">
        <slash role="select">
         <axis name="child" nodeTest="*:annotation"/>
         <axis name="child" nodeTest="*:documentation"/>
        </slash>
       </applyT>
       <valueOf>
        <str val="}, "/>
       </valueOf>
      </sequence>
     </choose>
     <valueOf>
      <str val="{ &#34;facets&#34;: [ "/>
     </valueOf>
     <applyT line="208" bSlot="1">
      <axis role="select" name="child" nodeTest="*:simpleType"/>
     </applyT>
     <valueOf>
      <str val=" ] "/>
     </valueOf>
     <valueOf>
      <str val="} "/>
     </valueOf>
     <valueOf>
      <str val="} "/>
     </valueOf>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="14" rank="2" minImp="0" slots="0" flags="os" line="168" module="file:/run/media/g/g-dev-tsoa.img.disk/g-dev-tsoa/xml-schema-content-extractor/./lib/extract-xml-schema-content.xsl">
    <p.withUpper role="match" axis="parent" upFirst="false">
     <p.nodeTest test="*:simpleType"/>
     <p.withUpper axis="parent" upFirst="false">
      <p.nodeTest test="*:schema"/>
      <p.nodeTest test="document-node()"/>
     </p.withUpper>
    </p.withUpper>
    <sequence role="action" vn="31" baseUri="file:/run/media/g/g-dev-tsoa.img.disk/g-dev-tsoa/xml-schema-content-extractor/./lib/extract-xml-schema-content.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform fn=http://www.w3.org/2005/xpath-functions oxd=http://www.oxygenxml.com/ns/doc/xsl xs=http://www.w3.org/2001/XMLSchema" line="169">
     <choose>
      <fn name="exists">
       <slash simple="1">
        <dot type="*:simpleType"/>
        <axis name="preceding-sibling" nodeTest="*:simpleType"/>
       </slash>
      </fn>
      <valueOf>
       <str val=", "/>
      </valueOf>
     </choose>
     <valueOf flags="S">
      <str val="&#34;"/>
     </valueOf>
     <choose line="173">
      <fn name="exists">
       <axis name="attribute" nodeTest="attribute(Q{}name)"/>
      </fn>
      <valueOf line="174">
       <convert from="xs:untypedAtomic" to="xs:string">
        <data>
         <axis name="attribute" nodeTest="attribute(Q{}name)"/>
        </data>
       </convert>
      </valueOf>
      <true/>
      <valueOf line="175" flags="S">
       <str val="anonymousType"/>
      </valueOf>
     </choose>
     <valueOf>
      <str val="&#34;: { &#34;type&#34;: &#34;simpleType&#34;"/>
     </valueOf>
     <choose line="178">
      <fn name="exists">
       <slash>
        <axis name="child" nodeTest="*:annotation"/>
        <axis name="child" nodeTest="*:documentation"/>
       </slash>
      </fn>
      <valueOf>
       <str val=", "/>
      </valueOf>
     </choose>
     <applyT line="179" bSlot="2">
      <slash role="select">
       <axis name="child" nodeTest="*:annotation"/>
       <axis name="child" nodeTest="*:documentation"/>
      </slash>
     </applyT>
     <valueOf>
      <str val=", &#34;facets&#34;: [ "/>
     </valueOf>
     <valueOf>
      <str val=" { "/>
     </valueOf>
     <applyT line="182" bSlot="3">
      <axis role="select" name="child" nodeTest="*:restriction"/>
     </applyT>
     <valueOf>
      <str val=" }"/>
     </valueOf>
     <valueOf>
      <str val="] "/>
     </valueOf>
     <valueOf>
      <str val="} "/>
     </valueOf>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="-0.25" seq="19" rank="1" minImp="0" slots="0" flags="os" line="252" module="file:/run/media/g/g-dev-tsoa.img.disk/g-dev-tsoa/xml-schema-content-extractor/./lib/extract-xml-schema-content.xsl">
    <p.nodeTest role="match" test="*:schema"/>
    <sequence role="action" vn="31" baseUri="file:/run/media/g/g-dev-tsoa.img.disk/g-dev-tsoa/xml-schema-content-extractor/./lib/extract-xml-schema-content.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform fn=http://www.w3.org/2005/xpath-functions oxd=http://www.oxygenxml.com/ns/doc/xsl xs=http://www.w3.org/2001/XMLSchema" line="255">
     <valueOf>
      <str val="{ &#34;schemaUri&#34;: "/>
     </valueOf>
     <valueOf flags="S">
      <str val="&#34;"/>
     </valueOf>
     <valueOf>
      <fn name="string-join">
       <convert from="xs:untypedAtomic" to="xs:string">
        <data>
         <slash>
          <slash simple="1">
           <root/>
           <axis name="descendant-or-self" nodeTest="element()"/>
          </slash>
          <axis name="attribute" nodeTest="attribute(Q{}targetNamespace)"/>
         </slash>
        </data>
       </convert>
       <str val=" "/>
      </fn>
     </valueOf>
     <valueOf flags="S">
      <str val="&#34;"/>
     </valueOf>
     <choose line="257">
      <fn name="exists">
       <slash>
        <axis name="child" nodeTest="*:annotation"/>
        <axis name="child" nodeTest="*:documentation"/>
       </slash>
      </fn>
      <valueOf>
       <str val=", "/>
      </valueOf>
     </choose>
     <applyT line="258" bSlot="4">
      <slash role="select">
       <axis name="child" nodeTest="*:annotation"/>
       <axis name="child" nodeTest="*:documentation"/>
      </slash>
     </applyT>
     <valueOf>
      <str val=", &#34;components&#34;: { "/>
     </valueOf>
     <applyT line="260" bSlot="5">
      <axis role="select" name="child" nodeTest="*:simpleType"/>
     </applyT>
     <choose line="261">
      <and op="and">
       <fn name="exists">
        <axis name="child" nodeTest="*:simpleType"/>
       </fn>
       <fn name="exists">
        <axis name="child" nodeTest="*:complexType"/>
       </fn>
      </and>
      <valueOf>
       <str val=", "/>
      </valueOf>
     </choose>
     <applyT line="262" bSlot="6">
      <axis role="select" name="child" nodeTest="*:complexType"/>
     </applyT>
     <choose line="263">
      <and op="and">
       <fn name="exists">
        <axis name="child" nodeTest="*:complexType"/>
       </fn>
       <fn name="exists">
        <axis name="child" nodeTest="*:element"/>
       </fn>
      </and>
      <valueOf>
       <str val=", "/>
      </valueOf>
     </choose>
     <applyT line="264" bSlot="7">
      <axis role="select" name="child" nodeTest="*:element"/>
     </applyT>
     <valueOf>
      <str val="} "/>
     </valueOf>
     <valueOf flags="S">
      <str val="}"/>
     </valueOf>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="-0.25" seq="18" rank="1" minImp="0" slots="0" flags="os" line="236" module="file:/run/media/g/g-dev-tsoa.img.disk/g-dev-tsoa/xml-schema-content-extractor/./lib/extract-xml-schema-content.xsl">
    <p.nodeTest role="match" test="*:element"/>
    <sequence role="action" vn="31" baseUri="file:/run/media/g/g-dev-tsoa.img.disk/g-dev-tsoa/xml-schema-content-extractor/./lib/extract-xml-schema-content.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform fn=http://www.w3.org/2005/xpath-functions oxd=http://www.oxygenxml.com/ns/doc/xsl xs=http://www.w3.org/2001/XMLSchema" line="239">
     <choose>
      <fn name="exists">
       <slash simple="1">
        <dot type="*:element"/>
        <axis name="preceding-sibling" nodeTest="*:element"/>
       </slash>
      </fn>
      <valueOf>
       <str val=", "/>
      </valueOf>
     </choose>
     <valueOf flags="S">
      <str val="&#34;"/>
     </valueOf>
     <valueOf line="241">
      <convert from="xs:untypedAtomic" to="xs:string">
       <data>
        <axis name="attribute" nodeTest="attribute(Q{}name)"/>
       </data>
      </convert>
     </valueOf>
     <valueOf>
      <str val="&#34;: { &#34;type&#34;: &#34;element&#34;"/>
     </valueOf>
     <choose line="243">
      <fn name="exists">
       <slash>
        <axis name="child" nodeTest="*:annotation"/>
        <axis name="child" nodeTest="*:documentation"/>
       </slash>
      </fn>
      <valueOf>
       <str val=", "/>
      </valueOf>
     </choose>
     <applyT line="244" bSlot="8">
      <slash role="select">
       <axis name="child" nodeTest="*:annotation"/>
       <axis name="child" nodeTest="*:documentation"/>
      </slash>
     </applyT>
     <valueOf>
      <str val=", &#34;facets&#34;: [ "/>
     </valueOf>
     <applyT line="246" bSlot="9">
      <axis role="select" name="child" nodeTest="*:simpleType"/>
     </applyT>
     <valueOf>
      <str val="] "/>
     </valueOf>
     <applyT line="248" bSlot="10">
      <slash role="select">
       <axis name="child" nodeTest="*:complexType"/>
       <axis name="child" nodeTest="*:attribute"/>
      </slash>
     </applyT>
     <valueOf>
      <str val="} "/>
     </valueOf>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="-0.25" seq="17" rank="1" minImp="0" slots="0" flags="os" line="214" module="file:/run/media/g/g-dev-tsoa.img.disk/g-dev-tsoa/xml-schema-content-extractor/./lib/extract-xml-schema-content.xsl">
    <p.nodeTest role="match" test="*:complexType"/>
    <sequence role="action" vn="31" baseUri="file:/run/media/g/g-dev-tsoa.img.disk/g-dev-tsoa/xml-schema-content-extractor/./lib/extract-xml-schema-content.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform fn=http://www.w3.org/2005/xpath-functions oxd=http://www.oxygenxml.com/ns/doc/xsl xs=http://www.w3.org/2001/XMLSchema" line="217">
     <choose>
      <fn name="exists">
       <slash simple="1">
        <dot type="*:complexType"/>
        <axis name="preceding-sibling" nodeTest="*:complexType"/>
       </slash>
      </fn>
      <valueOf>
       <str val=", "/>
      </valueOf>
     </choose>
     <valueOf flags="S">
      <str val="&#34;"/>
     </valueOf>
     <choose line="220">
      <fn name="exists">
       <axis name="attribute" nodeTest="attribute(Q{}name)"/>
      </fn>
      <valueOf line="221">
       <convert from="xs:untypedAtomic" to="xs:string">
        <data>
         <axis name="attribute" nodeTest="attribute(Q{}name)"/>
        </data>
       </convert>
      </valueOf>
      <true/>
      <valueOf line="222" flags="S">
       <str val="anonymousType"/>
      </valueOf>
     </choose>
     <valueOf>
      <str val="&#34;: { &#34;type&#34;: &#34;complexType&#34;"/>
     </valueOf>
     <choose line="231">
      <fn name="exists">
       <slash>
        <axis name="child" nodeTest="*:annotation"/>
        <axis name="child" nodeTest="*:documentation"/>
       </slash>
      </fn>
      <valueOf>
       <str val=", "/>
      </valueOf>
     </choose>
     <applyT line="232" bSlot="11">
      <slash role="select">
       <axis name="child" nodeTest="*:annotation"/>
       <axis name="child" nodeTest="*:documentation"/>
      </slash>
     </applyT>
     <valueOf>
      <str val="} "/>
     </valueOf>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="-0.25" seq="15" rank="1" minImp="0" slots="0" flags="os" line="188" module="file:/run/media/g/g-dev-tsoa.img.disk/g-dev-tsoa/xml-schema-content-extractor/./lib/extract-xml-schema-content.xsl">
    <p.nodeTest role="match" test="*:simpleType"/>
    <sequence role="action" vn="31" baseUri="file:/run/media/g/g-dev-tsoa.img.disk/g-dev-tsoa/xml-schema-content-extractor/./lib/extract-xml-schema-content.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform fn=http://www.w3.org/2005/xpath-functions oxd=http://www.oxygenxml.com/ns/doc/xsl xs=http://www.w3.org/2001/XMLSchema" line="189">
     <choose>
      <fn name="not">
       <axis name="descendant" nodeTest="*:simpleType"/>
      </fn>
      <valueOf>
       <str val=" { "/>
      </valueOf>
     </choose>
     <applyT line="190" flags="i" bSlot="12">
      <axis role="select" name="child" nodeTest="node()"/>
     </applyT>
     <choose line="191">
      <fn name="not">
       <axis name="descendant" nodeTest="*:simpleType"/>
      </fn>
      <valueOf>
       <str val=" }"/>
      </valueOf>
     </choose>
     <choose line="192">
      <fn name="exists">
       <axis name="following-sibling" nodeTest="element()"/>
      </fn>
      <valueOf>
       <str val=", "/>
      </valueOf>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="-0.25" seq="13" rank="1" minImp="0" slots="0" flags="os" line="154" module="file:/run/media/g/g-dev-tsoa.img.disk/g-dev-tsoa/xml-schema-content-extractor/./lib/extract-xml-schema-content.xsl">
    <p.nodeTest role="match" test="*:restriction"/>
    <sequence role="action" vn="31" baseUri="file:/run/media/g/g-dev-tsoa.img.disk/g-dev-tsoa/xml-schema-content-extractor/./lib/extract-xml-schema-content.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform fn=http://www.w3.org/2005/xpath-functions oxd=http://www.oxygenxml.com/ns/doc/xsl xs=http://www.w3.org/2001/XMLSchema" line="155">
     <choose>
      <fn name="exists">
       <slash simple="1">
        <dot type="*:restriction"/>
        <axis name="preceding-sibling" nodeTest="*:restriction"/>
       </slash>
      </fn>
      <valueOf>
       <str val=", "/>
      </valueOf>
     </choose>
     <choose line="157">
      <fn name="exists">
       <axis name="attribute" nodeTest="attribute(Q{}base)"/>
      </fn>
      <sequence line="159">
       <valueOf>
        <str val="&#34;baseType&#34;: &#34;"/>
       </valueOf>
       <valueOf>
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <axis name="attribute" nodeTest="attribute(Q{}base)"/>
         </data>
        </convert>
       </valueOf>
       <valueOf flags="S">
        <str val="&#34;"/>
       </valueOf>
       <choose line="161">
        <fn name="exists">
         <axis name="descendant" nodeTest="element()"/>
        </fn>
        <valueOf>
         <str val=", "/>
        </valueOf>
       </choose>
      </sequence>
     </choose>
     <applyT line="165" flags="t" bSlot="13">
      <axis role="select" name="child" nodeTest="element()"/>
     </applyT>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="-0.25" seq="12" rank="1" minImp="0" slots="0" flags="os" line="145" module="file:/run/media/g/g-dev-tsoa.img.disk/g-dev-tsoa/xml-schema-content-extractor/./lib/extract-xml-schema-content.xsl">
    <p.nodeTest role="match" test="*:pattern"/>
    <sequence role="action" vn="31" baseUri="file:/run/media/g/g-dev-tsoa.img.disk/g-dev-tsoa/xml-schema-content-extractor/./lib/extract-xml-schema-content.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform fn=http://www.w3.org/2005/xpath-functions oxd=http://www.oxygenxml.com/ns/doc/xsl xs=http://www.w3.org/2001/XMLSchema" line="147">
     <valueOf>
      <str val="&#34;pattern&#34;: &#34;"/>
     </valueOf>
     <valueOf>
      <fn name="replace">
       <fn name="replace">
        <fn name="normalize-space">
         <cvUntyped to="xs:string">
          <data>
           <axis name="attribute" nodeTest="attribute(Q{}value)"/>
          </data>
         </cvUntyped>
        </fn>
        <str val="\\"/>
        <str val="\\\\"/>
        <str val=""/>
       </fn>
       <str val="&#34;"/>
       <str val="\\&#34;"/>
       <str val=""/>
      </fn>
     </valueOf>
     <valueOf flags="S">
      <str val="&#34;"/>
     </valueOf>
     <choose line="150">
      <isLast test="0"/>
      <valueOf>
       <str val=", "/>
      </valueOf>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="-0.25" seq="11" rank="1" minImp="0" slots="0" flags="os" line="137" module="file:/run/media/g/g-dev-tsoa.img.disk/g-dev-tsoa/xml-schema-content-extractor/./lib/extract-xml-schema-content.xsl">
    <p.nodeTest role="match" test="*:minLength"/>
    <sequence role="action" vn="31" baseUri="file:/run/media/g/g-dev-tsoa.img.disk/g-dev-tsoa/xml-schema-content-extractor/./lib/extract-xml-schema-content.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform fn=http://www.w3.org/2005/xpath-functions oxd=http://www.oxygenxml.com/ns/doc/xsl xs=http://www.w3.org/2001/XMLSchema" line="139">
     <valueOf>
      <str val="&#34;minLength&#34;: "/>
     </valueOf>
     <valueOf>
      <convert from="xs:untypedAtomic" to="xs:string">
       <data>
        <axis name="attribute" nodeTest="attribute(Q{}value)"/>
       </data>
      </convert>
     </valueOf>
     <choose line="141">
      <isLast test="0"/>
      <valueOf>
       <str val=", "/>
      </valueOf>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="-0.25" seq="10" rank="1" minImp="0" slots="0" flags="os" line="129" module="file:/run/media/g/g-dev-tsoa.img.disk/g-dev-tsoa/xml-schema-content-extractor/./lib/extract-xml-schema-content.xsl">
    <p.nodeTest role="match" test="*:length"/>
    <sequence role="action" vn="31" baseUri="file:/run/media/g/g-dev-tsoa.img.disk/g-dev-tsoa/xml-schema-content-extractor/./lib/extract-xml-schema-content.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform fn=http://www.w3.org/2005/xpath-functions oxd=http://www.oxygenxml.com/ns/doc/xsl xs=http://www.w3.org/2001/XMLSchema" line="131">
     <valueOf>
      <str val="&#34;length&#34;: "/>
     </valueOf>
     <valueOf>
      <convert from="xs:untypedAtomic" to="xs:string">
       <data>
        <axis name="attribute" nodeTest="attribute(Q{}value)"/>
       </data>
      </convert>
     </valueOf>
     <choose line="133">
      <isLast test="0"/>
      <valueOf>
       <str val=", "/>
      </valueOf>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="-0.25" seq="9" rank="1" minImp="0" slots="0" flags="os" line="121" module="file:/run/media/g/g-dev-tsoa.img.disk/g-dev-tsoa/xml-schema-content-extractor/./lib/extract-xml-schema-content.xsl">
    <p.nodeTest role="match" test="*:maxLength"/>
    <sequence role="action" vn="31" baseUri="file:/run/media/g/g-dev-tsoa.img.disk/g-dev-tsoa/xml-schema-content-extractor/./lib/extract-xml-schema-content.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform fn=http://www.w3.org/2005/xpath-functions oxd=http://www.oxygenxml.com/ns/doc/xsl xs=http://www.w3.org/2001/XMLSchema" line="123">
     <valueOf>
      <str val="&#34;maxLength&#34;: "/>
     </valueOf>
     <valueOf>
      <convert from="xs:untypedAtomic" to="xs:string">
       <data>
        <axis name="attribute" nodeTest="attribute(Q{}value)"/>
       </data>
      </convert>
     </valueOf>
     <choose line="125">
      <isLast test="0"/>
      <valueOf>
       <str val=", "/>
      </valueOf>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="-0.25" seq="8" rank="1" minImp="0" slots="0" flags="os" line="113" module="file:/run/media/g/g-dev-tsoa.img.disk/g-dev-tsoa/xml-schema-content-extractor/./lib/extract-xml-schema-content.xsl">
    <p.nodeTest role="match" test="*:minInclusive"/>
    <sequence role="action" vn="31" baseUri="file:/run/media/g/g-dev-tsoa.img.disk/g-dev-tsoa/xml-schema-content-extractor/./lib/extract-xml-schema-content.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform fn=http://www.w3.org/2005/xpath-functions oxd=http://www.oxygenxml.com/ns/doc/xsl xs=http://www.w3.org/2001/XMLSchema" line="115">
     <valueOf>
      <str val="&#34;minInclusive&#34;: "/>
     </valueOf>
     <valueOf>
      <convert from="xs:untypedAtomic" to="xs:string">
       <data>
        <axis name="attribute" nodeTest="attribute(Q{}value)"/>
       </data>
      </convert>
     </valueOf>
     <choose line="117">
      <isLast test="0"/>
      <valueOf>
       <str val=", "/>
      </valueOf>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="-0.25" seq="7" rank="1" minImp="0" slots="0" flags="os" line="105" module="file:/run/media/g/g-dev-tsoa.img.disk/g-dev-tsoa/xml-schema-content-extractor/./lib/extract-xml-schema-content.xsl">
    <p.nodeTest role="match" test="*:maxInclusive"/>
    <sequence role="action" vn="31" baseUri="file:/run/media/g/g-dev-tsoa.img.disk/g-dev-tsoa/xml-schema-content-extractor/./lib/extract-xml-schema-content.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform fn=http://www.w3.org/2005/xpath-functions oxd=http://www.oxygenxml.com/ns/doc/xsl xs=http://www.w3.org/2001/XMLSchema" line="107">
     <valueOf>
      <str val="&#34;maxInclusive&#34;: "/>
     </valueOf>
     <valueOf>
      <convert from="xs:untypedAtomic" to="xs:string">
       <data>
        <axis name="attribute" nodeTest="attribute(Q{}value)"/>
       </data>
      </convert>
     </valueOf>
     <choose line="109">
      <isLast test="0"/>
      <valueOf>
       <str val=", "/>
      </valueOf>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="-0.25" seq="6" rank="1" minImp="0" slots="0" flags="os" line="96" module="file:/run/media/g/g-dev-tsoa.img.disk/g-dev-tsoa/xml-schema-content-extractor/./lib/extract-xml-schema-content.xsl">
    <p.nodeTest role="match" test="*:minExclusive"/>
    <sequence role="action" vn="31" baseUri="file:/run/media/g/g-dev-tsoa.img.disk/g-dev-tsoa/xml-schema-content-extractor/./lib/extract-xml-schema-content.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform fn=http://www.w3.org/2005/xpath-functions oxd=http://www.oxygenxml.com/ns/doc/xsl xs=http://www.w3.org/2001/XMLSchema" line="97">
     <choose>
      <fn name="exists">
       <slash simple="1">
        <dot type="*:minExclusive"/>
        <axis name="preceding-sibling" nodeTest="element()"/>
       </slash>
      </fn>
      <valueOf>
       <str val=", "/>
      </valueOf>
     </choose>
     <valueOf>
      <str val="&#34;minExclusive&#34;: "/>
     </valueOf>
     <valueOf line="99">
      <convert from="xs:untypedAtomic" to="xs:string">
       <data>
        <axis name="attribute" nodeTest="attribute(Q{}value)"/>
       </data>
      </convert>
     </valueOf>
     <choose line="101">
      <isLast test="0"/>
      <valueOf>
       <str val=", "/>
      </valueOf>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="-0.25" seq="5" rank="1" minImp="0" slots="0" flags="os" line="88" module="file:/run/media/g/g-dev-tsoa.img.disk/g-dev-tsoa/xml-schema-content-extractor/./lib/extract-xml-schema-content.xsl">
    <p.nodeTest role="match" test="*:maxExclusive"/>
    <sequence role="action" vn="31" baseUri="file:/run/media/g/g-dev-tsoa.img.disk/g-dev-tsoa/xml-schema-content-extractor/./lib/extract-xml-schema-content.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform fn=http://www.w3.org/2005/xpath-functions oxd=http://www.oxygenxml.com/ns/doc/xsl xs=http://www.w3.org/2001/XMLSchema" line="90">
     <valueOf>
      <str val="&#34;maxExclusive&#34;: "/>
     </valueOf>
     <valueOf>
      <convert from="xs:untypedAtomic" to="xs:string">
       <data>
        <axis name="attribute" nodeTest="attribute(Q{}value)"/>
       </data>
      </convert>
     </valueOf>
     <choose line="92">
      <isLast test="0"/>
      <valueOf>
       <str val=", "/>
      </valueOf>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="-0.25" seq="4" rank="1" minImp="0" slots="0" flags="os" line="80" module="file:/run/media/g/g-dev-tsoa.img.disk/g-dev-tsoa/xml-schema-content-extractor/./lib/extract-xml-schema-content.xsl">
    <p.nodeTest role="match" test="*:totalDigits"/>
    <sequence role="action" vn="31" baseUri="file:/run/media/g/g-dev-tsoa.img.disk/g-dev-tsoa/xml-schema-content-extractor/./lib/extract-xml-schema-content.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform fn=http://www.w3.org/2005/xpath-functions oxd=http://www.oxygenxml.com/ns/doc/xsl xs=http://www.w3.org/2001/XMLSchema" line="82">
     <valueOf>
      <str val="&#34;totalDigits&#34;: "/>
     </valueOf>
     <valueOf>
      <convert from="xs:untypedAtomic" to="xs:string">
       <data>
        <axis name="attribute" nodeTest="attribute(Q{}value)"/>
       </data>
      </convert>
     </valueOf>
     <choose line="84">
      <isLast test="0"/>
      <valueOf>
       <str val=", "/>
      </valueOf>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="-0.25" seq="3" rank="1" minImp="0" slots="0" flags="os" line="72" module="file:/run/media/g/g-dev-tsoa.img.disk/g-dev-tsoa/xml-schema-content-extractor/./lib/extract-xml-schema-content.xsl">
    <p.nodeTest role="match" test="*:fractionDigits"/>
    <sequence role="action" vn="31" baseUri="file:/run/media/g/g-dev-tsoa.img.disk/g-dev-tsoa/xml-schema-content-extractor/./lib/extract-xml-schema-content.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform fn=http://www.w3.org/2005/xpath-functions oxd=http://www.oxygenxml.com/ns/doc/xsl xs=http://www.w3.org/2001/XMLSchema" line="74">
     <valueOf>
      <str val="&#34;fractionDigits&#34;: "/>
     </valueOf>
     <valueOf>
      <convert from="xs:untypedAtomic" to="xs:string">
       <data>
        <axis name="attribute" nodeTest="attribute(Q{}value)"/>
       </data>
      </convert>
     </valueOf>
     <choose line="76">
      <isLast test="0"/>
      <valueOf>
       <str val=", "/>
      </valueOf>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="-0.25" seq="2" rank="1" minImp="0" slots="1" flags="os" line="46" module="file:/run/media/g/g-dev-tsoa.img.disk/g-dev-tsoa/xml-schema-content-extractor/./lib/extract-xml-schema-content.xsl">
    <p.nodeTest role="match" test="*:enumeration"/>
    <let role="action" vn="31" baseUri="file:/run/media/g/g-dev-tsoa.img.disk/g-dev-tsoa/xml-schema-content-extractor/./lib/extract-xml-schema-content.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform fn=http://www.w3.org/2005/xpath-functions oxd=http://www.oxygenxml.com/ns/doc/xsl xs=http://www.w3.org/2001/XMLSchema" line="47" var="isString" as="document-node()" slot="0" eval="7">
     <doc line="49" base="file:/run/media/g/g-dev-tsoa.img.disk/g-dev-tsoa/xml-schema-content-extractor/./lib/extract-xml-schema-content.xsl" flags="t" validation="preserve">
      <choose>
       <fn name="concat">
        <fn name="contains">
         <check card="?" diag="0|0||contains">
          <cvUntyped to="xs:string">
           <data>
            <slash>
             <axis name="parent" nodeTest="(document-node()|element())"/>
             <axis name="attribute" nodeTest="attribute(Q{}base)"/>
            </slash>
           </data>
          </cvUntyped>
         </check>
         <str val="string"/>
        </fn>
        <fn name="contains">
         <fn name="lower-case">
          <check card="?" diag="0|0||lower-case">
           <cvUntyped to="xs:string">
            <data>
             <slash>
              <axis name="parent" nodeTest="(document-node()|element())"/>
              <axis name="attribute" nodeTest="attribute(Q{}base)"/>
             </slash>
            </data>
           </cvUntyped>
          </check>
         </fn>
         <str val="token"/>
        </fn>
       </fn>
       <valueOf line="50" flags="l">
        <str val="true"/>
       </valueOf>
      </choose>
     </doc>
     <sequence line="53">
      <choose>
       <fn name="not">
        <fn name="reverse">
         <slash simple="1">
          <dot type="*:enumeration"/>
          <axis name="preceding-sibling" nodeTest="element()"/>
         </slash>
        </fn>
       </fn>
       <valueOf>
        <str val="&#34;enumeration&#34;: [ "/>
       </valueOf>
      </choose>
      <valueOf>
       <str val="{ &#34;value&#34;: "/>
      </valueOf>
      <choose line="56">
       <fn name="exists">
        <varRef name="isString" slot="0"/>
       </fn>
       <valueOf flags="S">
        <str val="&#34;"/>
       </valueOf>
      </choose>
      <valueOf line="59">
       <convert from="xs:untypedAtomic" to="xs:string">
        <data>
         <axis name="attribute" nodeTest="attribute(Q{}value)"/>
        </data>
       </convert>
      </valueOf>
      <choose line="60">
       <fn name="exists">
        <varRef name="isString" slot="0"/>
       </fn>
       <valueOf flags="S">
        <str val="&#34;"/>
       </valueOf>
      </choose>
      <choose line="63">
       <fn name="exists">
        <axis name="descendant" nodeTest="element()"/>
       </fn>
       <valueOf>
        <str val=", "/>
       </valueOf>
      </choose>
      <applyT line="64" flags="i" bSlot="14">
       <axis role="select" name="child" nodeTest="node()"/>
      </applyT>
      <valueOf>
       <str val=" } "/>
      </valueOf>
      <choose line="67">
       <isLast test="0"/>
       <valueOf>
        <str val=", "/>
       </valueOf>
       <true/>
       <valueOf line="68">
        <str val=" ] "/>
       </valueOf>
      </choose>
     </sequence>
    </let>
   </templateRule>
   <templateRule prec="0" prio="-0.25" seq="1" rank="1" minImp="0" slots="0" flags="os" line="30" module="file:/run/media/g/g-dev-tsoa.img.disk/g-dev-tsoa/xml-schema-content-extractor/./lib/extract-xml-schema-content.xsl">
    <p.nodeTest role="match" test="*:documentation"/>
    <sequence role="action" vn="31" baseUri="file:/run/media/g/g-dev-tsoa.img.disk/g-dev-tsoa/xml-schema-content-extractor/./lib/extract-xml-schema-content.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform fn=http://www.w3.org/2005/xpath-functions oxd=http://www.oxygenxml.com/ns/doc/xsl xs=http://www.w3.org/2001/XMLSchema" line="33">
     <choose>
      <fn name="not">
       <fn name="reverse">
        <slash simple="1">
         <dot type="*:documentation"/>
         <axis name="preceding-sibling" nodeTest="*:documentation"/>
        </slash>
       </fn>
      </fn>
      <valueOf>
       <str val="&#34;documentation&#34;: [ "/>
      </valueOf>
      <true/>
      <valueOf line="34">
       <str val=", "/>
      </valueOf>
     </choose>
     <valueOf flags="S">
      <str val="&#34;"/>
     </valueOf>
     <valueOf line="37">
      <fn name="replace">
       <fn name="replace">
        <fn name="normalize-space">
         <cvUntyped to="xs:string">
          <data>
           <dot type="*:documentation"/>
          </data>
         </cvUntyped>
        </fn>
        <str val="\\"/>
        <str val="\\\\"/>
        <str val=""/>
       </fn>
       <str val="&#34;"/>
       <str val="\\&#34;"/>
       <str val=""/>
      </fn>
     </valueOf>
     <valueOf flags="S">
      <str val="&#34;"/>
     </valueOf>
     <choose line="43">
      <fn name="not">
       <axis name="following-sibling" nodeTest="*:documentation"/>
      </fn>
      <valueOf>
       <str val=" ]"/>
      </valueOf>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="-0.5" seq="0" rank="0" minImp="0" slots="0" flags="os" line="24" module="file:/run/media/g/g-dev-tsoa.img.disk/g-dev-tsoa/xml-schema-content-extractor/./lib/extract-xml-schema-content.xsl">
    <p.nodeTest role="match" test="attribute()"/>
    <copy role="action" vn="31" baseUri="file:/run/media/g/g-dev-tsoa.img.disk/g-dev-tsoa/xml-schema-content-extractor/./lib/extract-xml-schema-content.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform fn=http://www.w3.org/2005/xpath-functions oxd=http://www.oxygenxml.com/ns/doc/xsl xs=http://www.w3.org/2001/XMLSchema" line="26" flags="in">
     <applyT role="content" bSlot="15">
      <sequence role="select">
       <axis name="attribute" nodeTest="attribute()"/>
       <axis name="child" nodeTest="( element() | text() | comment() | processing-instruction() )"/>
      </sequence>
     </applyT>
    </copy>
   </templateRule>
   <templateRule prec="0" prio="-0.5" seq="0" rank="0" minImp="0" slots="0" flags="os" line="24" module="file:/run/media/g/g-dev-tsoa.img.disk/g-dev-tsoa/xml-schema-content-extractor/./lib/extract-xml-schema-content.xsl">
    <p.nodeTest role="match" test="( element() | text() | comment() | processing-instruction() )"/>
    <copy role="action" vn="31" baseUri="file:/run/media/g/g-dev-tsoa.img.disk/g-dev-tsoa/xml-schema-content-extractor/./lib/extract-xml-schema-content.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform fn=http://www.w3.org/2005/xpath-functions oxd=http://www.oxygenxml.com/ns/doc/xsl xs=http://www.w3.org/2001/XMLSchema" line="26" flags="in">
     <applyT role="content" bSlot="15">
      <sequence role="select">
       <axis name="attribute" nodeTest="attribute()"/>
       <axis name="child" nodeTest="( element() | text() | comment() | processing-instruction() )"/>
      </sequence>
     </applyT>
    </copy>
   </templateRule>
  </mode>
 </co>
 <overridden/>
 <output>
  <property name="indent" value="yes"/>
  <property name="{http://saxon.sf.net/}stylesheet-version" value="30"/>
  <property name="method" value="text"/>
 </output>
 <decimalFormat decimal-separator="46" grouping-separator="44" digit="35" minus-sign="45" percent="37" per-mille="8240" zero-digit="48" exponent-separator="101" pattern-separator="59" infinity="Infinity" NaN="NaN"/>
</package>
<?Σ 3c05ff67?>
